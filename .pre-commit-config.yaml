---
repos:
  # Dockerfile Linting
  # Lints Dockerfiles to ensure they adhere to best practices.
  - repo: https://github.com/petalmd/dockerfile-pre-commit
    rev: v1.0
    hooks:
      - id: dockerlint

  # Python Code Formatting
  # Automatically formats Python code to conform to the PEP 8 style guide.
  - repo: https://github.com/ambv/black
    rev: 23.7.0
    hooks:
      - id: black

  # General Pre-commit Hooks
    # A set of hooks to:
    # - Detect merge conflicts.
    # - Validate YAML and JSON files.
    # - Remove debug statements.
    # - Remove trailing whitespaces.
    # - Fix requirements.txt order.
    # - Ensure tests are named correctly.
    # - Fix encoding pragma.
    # - Ensure files end with a newline.
    # - Detect private keys.
    # - Ensure executables have shebangs.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict
      - id: check-yaml
      - id: check-json
      - id: debug-statements
      - id: trailing-whitespace
      - id: requirements-txt-fixer
      - id: name-tests-test
      - id: fix-encoding-pragma
      - id: end-of-file-fixer
      - id: detect-private-key
      - id: check-executables-have-shebangs

  # Python Security Linting
  # Finds common security issues in Python code.
  - repo: https://github.com/PyCQA/bandit.git
    rev: 1.7.5
    hooks:
      - id: bandit
        files: .py$
        exclude_dirs: env

  # Python Linting
  # Checks Python code against some of the style conventions in PEP 8.
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=120]

  # Terraform Linting and Validation
  # Provides various hooks to ensure Terraform files are correctly formatted, documented, and free from common errors.
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.0
    hooks:
      - id: terraform_fmt
      - id: terraform_docs
      - id: terraform_validate
      - id: terraform_tflint
        args:
          - --args=--minimum-failure-severity=error
        verbose: true
      - id: terraform_tfsec
      - id: terraform_checkov
      - id: terrascan
      - id: infracost_breakdown
        args:
          - --args=--path=.
        verbose: true

  # Python Dependency Management
  # Helps in compiling and synchronizing Python dependencies.
  - repo: https://github.com/jazzband/pip-tools
    rev: 7.3.0
    hooks:
      - id: pip-compile

  # AWS CloudFormation Linting
  # Checks AWS CloudFormation templates against AWS best practices.
  - repo: https://github.com/aws-cloudformation/cfn-python-lint
    rev: v0.79.7
    hooks:
      - id: cfn-python-lint
        files: path/to/cfn/dir/.*\.(json|yml|yaml)$

  # Local Testing
  # Runs tests using pytest.
  - repo: local
    hooks:
      - id: tests
        name: run tests
        entry: pytest -v
        language: system
        types: [python]
        stages: [push]

  # Ansible Linting
  # Checks Ansible playbooks for practices and behavior that could potentially be improved.
  - repo: https://github.com/ansible-community/ansible-lint.git
    rev: v6.18.0
    hooks:
      - id: ansible-lint
        name: Ansible-lint
        description: This hook runs ansible-lint.
        entry: ansible-lint --force-color .
        language: python
        # do not pass files to ansible-lint, see:
        # https://github.com/ansible-community/ansible-lint/issues/611
        pass_filenames: false
        always_run: true
